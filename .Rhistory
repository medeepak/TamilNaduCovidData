source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
View(deaths_by_country)
View(deaths_by_country)
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
install.packages("ggrepl")
install.packages("ggrepel")
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/deaths_and_recoveries.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
data$Status
gsub("#$", "", data$Status)
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
data
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
readLines("https://api.covid19india.org/deaths_recoveries.json")
data <- readLines("https://api.covid19india.org/deaths_recoveries.json")
as.data.frame(fromJSON(data))
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
library(dplyr)
library(ggplot2)
library(forcats)
library(reshape2)
library(jsonlite)
data <- readLines("https://api.covid19india.org/deaths_recoveries.json")
data <- as.data.frame(fromJSON(data))
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
library(dplyr)
library(ggplot2)
library(forcats)
library(reshape2)
library(jsonlite)
data <- readLines("https://api.covid19india.org/deaths_recoveries.json")
data <- as.data.frame(fromJSON(data))
data$Status <- gsub("#$", "", data$Status)
View(data)
grouped_data <- dcast(data, State~Status) %>% mutate(Closed.Cases=Deceased+Recovered)
names(data)
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/closed_cases_share_statewise.R')
install.packages("gganimate")
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_cities.R')
install.packages("gifski")
install.packages("av")
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/tests_as_share_of_population.R')
View(tests_df)
View(last_7_day_data_large_state)
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
View(last_7_day_data_large_state)
View(last_7_day_data_large_state %>% select(c('State')))
View(last_7_day_data_large_state %>% select(c('State','Updates.On', 'Total.Tested', 'Daily.Tests')))
View(last_7_day_data_large_state %>% select(c('State','Updated.On', 'Total.Tested', 'Daily.Tests')))
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/tests_as_share_of_population.R')
View(last_7_day_data_large_state %>% select(c('State','Updated.On', 'Total.Tested', 'Daily.Tests')))
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
View(district_wise_data)
top_10_districts_list
library(jsonlite)
library(dplyr)
library(ggplot2)
library(forcats)
library(gganimate)
library(ggrepel)
library(zoo)
library(ggimage)
raw_data <- readLines("https://api.covid19india.org/raw_data1.json")
data <- as.data.frame(fromJSON(raw_data))
raw_data <- readLines("https://api.covid19india.org/raw_data2.json")
data <- rbind(data,as.data.frame(fromJSON(raw_data)))
raw_data <- readLines("https://api.covid19india.org/raw_data3.json")
data2 <- as.data.frame(fromJSON(raw_data))
district_wise_data <- as.data.frame(data %>% group_by(raw_data.detecteddistrict, raw_data.dateannounced) %>% subset(raw_data.detecteddistrict !="") %>% summarise(count=n()))
temp_df <- as.data.frame(data %>% group_by(raw_data.detectedstate, raw_data.dateannounced) %>% subset(raw_data.detectedstate =="Delhi") %>% summarise(count=n()))
names(temp_df) <- c("raw_data.detecteddistrict", "raw_data.dateannounced", "count")
district_wise_data <- rbind(district_wise_data, temp_df)
district_wise_data_2 <- as.data.frame(data2 %>% group_by(raw_data.detecteddistrict, raw_data.dateannounced) %>% subset(raw_data.detecteddistrict !="") %>% summarise(count=sum(as.integer(raw_data.numcases))))
temp_df <- as.data.frame(data2 %>% group_by(raw_data.detectedstate, raw_data.dateannounced) %>% subset(raw_data.detectedstate =="Delhi") %>% summarise(count=sum(as.integer(raw_data.numcases))))
names(temp_df) <- c("raw_data.detecteddistrict", "raw_data.dateannounced", "count")
district_wise_data_2 <- rbind(district_wise_data_2, temp_df)
district_wise_data <- rbind(district_wise_data, district_wise_data_2)
head(district_wise_data)
top_10_districts_list <- as.list(district_wise_data[district_wise_data$raw_data.detecteddistrict != "" & district_wise_data$raw_data.dateannounced == format(Sys.Date()-2, "%d/%m/%Y") ,] %>% group_by(raw_data.detecteddistrict) %>% summarise(Cumulative.Sum=sum(count))   %>% arrange(desc(Cumulative.Sum)) %>% top_n(10) %>% select(raw_data.detecteddistrict))
top_10_districts_list
top_10_districts_list <- as.list(district_wise_data[district_wise_data$raw_data.detecteddistrict != "" & district_wise_data$raw_data.dateannounced == format(Sys.Date()-2, "%d/%m/%Y") ,] %>% group_by(raw_data.detecteddistrict) %>% summarise(Cumulative.Sum=sum(count))
)
top_10_districts_list
top_10_districts_list <- as.list(district_wise_data[district_wise_data$raw_data.detecteddistrict != "" & district_wise_data$raw_data.dateannounced == format(Sys.Date()-2, "%d/%m/%Y") ,]
)
top_10_districts_list
View(district_wise_data)
format(Sys.Date()-2, "%d/%m/%Y")
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
top_10_districts_data
unique(top_10_districts_data$district)
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
g <- ggplot(top_10_districts_data, aes(x=as.Date(Date,"%d/%m/%Y"), y=as.integer(Cumulative.Sum), group=district, color=district )) +
geom_line() +
#geom_segment(aes(xend = 46, yend = as.integer(Cumulative.Sum)), linetype = 2, colour = 'grey') +
#geom_point(size=1.5) +
#geom_label(aes(label=district)) +
scale_x_discrete() +
ylab("Confirmed cases") +
xlab("") +
ggtitle("Trend of Confirmed Cases since 21st March in Most Affected districts") +
theme(text=element_text(family="Helvetica", size=12) , plot.title = element_text(hjust = 0.5),   legend.position = "off") +
labs(title = 'Coronavirus confirmed cases since reaching 100') +
#ylim(0,14000) +
geom_label_repel(aes(label=district), nudge_x = 3, direction = "y", hjust = 1, segment.size = 0.2, text=element_text(family="Roboto", size=8), data=head(tail(top_10_districts_data,20),10))
ggsave("ConfirmedCasesdistrictWise.png", width = 14, height = 10, dpi = 300, units = "in",  device="png", path="~/Desktop")
source('~/kindle_curator/power_calculation.R')
source('~/kindle_curator/power_calculation.R')
source('~/kindle_curator/power_calculation.R')
source('~/kindle_curator/power_calculation.R')
library(pwr)
pwr.anova.test(k=3, n=NULL, f=0.05, sig.level=0.05, power=0.8)
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/tests_as_share_of_population.R')
source('~/kindle_curator/power_calculation.R')
source('~/kindle_curator/power_calculation.R')
source('~/kindle_curator/power_calculation.R')
source('~/kindle_curator/power_calculation.R')
source('~/kindle_curator/power_calculation.R')
source('~/kindle_curator/power_calculation.R')
source('~/kindle_curator/power_calculation.R')
install.packages("plotly")
library(plotly)
install.packages("plotly")
update.packages("tibble")
tibble()
sessionInfo()
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("plotly")
library(plotly)
trace_0 <- rnorm(100, mean = 5)
trace_1 <- rnorm(100, mean = 0)
trace_2 <- rnorm(100, mean = -5)
x <- c(1:100)
data <- data.frame(x, trace_0, trace_1, trace_2)
fig <- plot_ly(data, x = ~x, y = ~trace_0, name = 'trace 0', type = 'scatter', mode = 'lines')
fig <- fig %>% add_trace(y = ~trace_1, name = 'trace 1', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~trace_2, name = 'trace 2', mode = 'markers')
fig
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
View(top_3_hotspots_weekly_data)
library(jsonlite)
library(dplyr)
library(ggplot2)
library(forcats)
library(gganimate)
library(ggrepel)
library(zoo)
library(ggimage)
library(lubridate)
raw_data <- readLines("https://api.covid19india.org/raw_data1.json")
data <- as.data.frame(fromJSON(raw_data))
raw_data <- readLines("https://api.covid19india.org/raw_data2.json")
data <- rbind(data,as.data.frame(fromJSON(raw_data)))
raw_data <- readLines("https://api.covid19india.org/raw_data3.json")
data2 <- as.data.frame(fromJSON(raw_data))
raw_data <- readLines("https://api.covid19india.org/raw_data4.json")
data2 <- rbind(data2,as.data.frame(fromJSON(raw_data)))
raw_data <- readLines("https://api.covid19india.org/raw_data5.json")
data2 <- rbind(data2,as.data.frame(fromJSON(raw_data)))
raw_data <- readLines("https://api.covid19india.org/raw_data6.json")
data2 <- rbind(data2,as.data.frame(fromJSON(raw_data)))
raw_data <- readLines("https://api.covid19india.org/raw_data7.json")
data2 <- rbind(data2,as.data.frame(fromJSON(raw_data)))
raw_data <- readLines("https://api.covid19india.org/raw_data8.json")
data2 <- rbind(data2,as.data.frame(fromJSON(raw_data)))
raw_data <- readLines("https://api.covid19india.org/raw_data9.json")
data2 <- rbind(data2,as.data.frame(fromJSON(raw_data)))
district_wise_data <- as.data.frame(data %>% group_by(raw_data.detecteddistrict, raw_data.dateannounced) %>% subset(raw_data.detecteddistrict !="") %>% summarise(count=n()))
temp_df <- as.data.frame(data %>% group_by(raw_data.detectedstate, raw_data.dateannounced) %>% subset(raw_data.detectedstate =="Delhi") %>% summarise(count=n()))
names(temp_df) <- c("raw_data.detecteddistrict", "raw_data.dateannounced", "count")
district_wise_data <- rbind(district_wise_data, temp_df)
district_wise_data_2 <- as.data.frame(data2 %>% group_by(raw_data.detecteddistrict, raw_data.dateannounced) %>% subset(raw_data.detecteddistrict !="") %>% subset(raw_data.currentstatus == "Hospitalized") %>% summarise(count=sum(as.integer(raw_data.numcases))))
temp_df <- as.data.frame(data2 %>% group_by(raw_data.detectedstate, raw_data.dateannounced) %>% subset(raw_data.currentstatus == "Hospitalized") %>% subset(raw_data.detectedstate =="Delhi") %>% summarise(count=sum(as.integer(raw_data.numcases))))
names(temp_df) <- c("raw_data.detecteddistrict", "raw_data.dateannounced", "count")
district_wise_data_2 <- rbind(district_wise_data_2, temp_df)
district_wise_data <- rbind(district_wise_data, district_wise_data_2)
top_3_hotspots <- as.list(c("Chennai", "Delhi", "Mumbai", "Hyderabad", "Bengaluru Urban"))
next_12_districts_list <- as.list(district_wise_data[district_wise_data$raw_data.detecteddistrict != "" & district_wise_data$raw_data.dateannounced == format(Sys.Date()-2, "%d/%m/%Y") ,] %>% group_by(raw_data.detecteddistrict) %>% summarise(Cumulative.Sum=sum(count))   %>% arrange(desc(Cumulative.Sum)) %>% top_n(15) %>% top_n(-12) %>% select(raw_data.detecteddistrict))
district_wise_data <- district_wise_data %>% arrange(as.Date(raw_data.dateannounced, "%d/%m/%Y"))
district_wise_data <- district_wise_data %>% group_by(raw_data.detecteddistrict) %>% mutate(Cumulative.Sum=cumsum(count))
names(district_wise_data) <- c("district", "Date", "Count", "Cumulative.Sum")
district_wise_data <- district_wise_data %>% group_by(district) %>% mutate(Rolling.Average=rollapply(Count,7,mean,align='right',fill=NA))
district_wise_data <- district_wise_data %>% group_by(district) %>% mutate(Rolling.Average.7.Days=rollapply(Count,7,mean,align='right',fill=NA))
district_wise_data <- district_wise_data %>% group_by(district) %>% mutate(Growth.Rate=(Cumulative.Sum-lag(Cumulative.Sum))*100/lag(Cumulative.Sum))
district_wise_data <- district_wise_data %>% group_by(district) %>%  mutate(Seven.day.growth.rate=rollapply(Growth.Rate,7,mean,align='right',fill=NA))
district_wise_data$Date <- as.Date(district_wise_data$Date, "%d/%m/%Y")
top_3_hotspots_data <- district_wise_data[district_wise_data$district %in% top_3_hotspots,]
next_12_districts_data <- district_wise_data[district_wise_data$district %in% next_12_districts_list$raw_data.detecteddistrict,]
#Cumulative Plot
g <- ggplot(top_3_hotspots_data, aes(x=Date, y=as.integer(Cumulative.Sum), group=district )) +
geom_smooth(aes(color=district), size=1.5) +
#scale_x_discrete() +
scale_x_date() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab("Date") +
ylab("Count") +
ggtitle("Other highly districts due to COVID-19") +
theme(text=element_text(family="Helvetica", size=14) , plot.title = element_text(hjust = 0.5), panel.grid.major = element_blank())
ggbackground(g, "~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/old_paper.jpg")
ggsave("Top_3_hotspots.png", width = 10, height = 8, dpi = 150, units = "in",  device="png", path="~/Desktop")
g <- ggplot(next_12_districts_data, aes(x=Date, y=as.integer(Cumulative.Sum), group=district )) +
geom_smooth(aes(color=district), size=1.5) +
#scale_x_discrete() +
scale_x_date() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab("Date") +
ylab("Count") +
ggtitle("Other highly districts due to COVID-19") +
theme(text=element_text(family="Helvetica", size=14) , plot.title = element_text(hjust = 0.5), panel.grid.major = element_blank())
ggbackground(g, "~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/old_paper.jpg")
ggsave("Other_most_affected_districts.png", width = 10, height = 8, dpi = 150, units = "in",  device="png", path="~/Desktop")
#print(g)
next_12_districts_data <- next_12_districts_data %>% subset(Cumulative.Sum>100)
next_12_districts_data <- next_12_districts_data %>% group_by(district) %>% mutate(Row.Count=as.integer(as.Date(Date,"%d/%m/%Y") - as.Date("2020-03-21")))
#View(next_12_districts_data)
g <- ggplot(next_12_districts_data, aes(x=as.Date(Date,"%d/%m/%Y"), y=as.integer(Cumulative.Sum), group=district, color=district )) +
geom_line() +
scale_x_discrete() +
ylab("Confirmed cases") +
xlab("") +
ggtitle("Trend of Confirmed Cases since 21st March in Most Affected districts") +
theme(text=element_text(family="Helvetica", size=12) , plot.title = element_text(hjust = 0.5),   legend.position = "off") +
labs(title = 'Coronavirus confirmed cases since reaching 100') +
#ylim(0,14000) +
geom_label_repel(aes(label=district), nudge_x = 3, direction = "y", hjust = 1, segment.size = 0.2, text=element_text(family="Roboto", size=8), data=head(tail(next_12_districts_data,20),10))
ggsave("ConfirmedCasesdistrictWise.png", width = 14, height = 10, dpi = 300, units = "in",  device="png", path="~/Desktop")
#a <- g+transition_reveal(as.Date(Date,"%d/%m/%Y"))
#anim <- animate(a, fps=5)
#anim <- ggbackground(anim, "~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/old_paper.jpg")
#anim_save("~/Desktop/Most_affected_districts_anim.gif",anim, width = 14, height = 10)
g <- ggplot(next_12_districts_data, aes(x=Date, y=Rolling.Average, group=district)) +
scale_x_date() +
geom_line(aes(color=district), size=1.5) +
ylab("Count") +
ggtitle("New cases in hotspots (7 day rolling average)") +
facet_wrap(~district,nrow=4, scales = "free_y") +
theme(plot.title = element_text(hjust = 0.5, vjust = -0.25, size=18), panel.grid.major = element_blank(), legend.position = "off", plot.margin=unit(c(1,1,1.5,1.2),"cm")) +
theme(axis.text.x = element_text(angle = 90, vjust = -0.25), text=element_text(family="Roboto", size=12, face="bold")) +
theme(axis.text.y = element_text(vjust = -0.25), text=element_text(family="Roboto", size=12, face="bold")) +
xlab("Date")
ggbackground(g, "~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/old_paper.jpg")
ggsave("districtwise_confirmed_cases_rolling_average.png", width = 12, height = 8, dpi = 150, units = "in",  device="png", path="~/Desktop")
g <- ggplot(top_3_hotspots_data, aes(x=Date, y=Rolling.Average.7.Days, group=district)) +
scale_x_date() +
geom_line(aes(color=district), size=1.5) +
ylab("Count") +
ggtitle("New cases in hotspots (7 day rolling average)") +
#facet_wrap(~district,ncol=4, scales = "free_y") +
theme(plot.title = element_text(hjust = 0.5, vjust = -0.25, size=18), panel.grid.major = element_blank(), legend.position = "bottom", legend.title = element_blank(), plot.margin=unit(c(1,1,1.5,1.2),"cm")) +
theme(axis.text.x = element_text(angle = 90, vjust = -0.25), text=element_text(family="Roboto", size=12, face="bold")) +
theme(axis.text.y = element_text(vjust = -0.25), text=element_text(family="Roboto", size=12, face="bold")) +
xlab("Date")
ggbackground(g, "~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/old_paper.jpg")
ggsave("Top_5_hotspots_7_day_rolling_average.png", width = 12, height = 8, dpi = 150, units = "in",  device="png", path="~/Desktop")
g <- ggplot(top_3_hotspots_data, aes(x=Date, y=Seven.day.growth.rate, group=district)) +
scale_x_date() +
geom_line(aes(color=district), size=1.5) +
ylab("Growth rate") +
lims(x= c(Sys.Date() - 20, NA), y = c(0, 15)) +
ggtitle("Growth rate in hotspots (7 day rolling average)") +
#facet_wrap(~district,ncol=4, scales = "free_y") +
theme(plot.title = element_text(hjust = 0.5, vjust = -0.25, size=18), panel.grid.major = element_blank(), legend.position = "bottom", legend.title = element_blank(), plot.margin=unit(c(1,1,1.5,1.2),"cm")) +
theme(axis.text.x = element_text(angle = 90, vjust = -0.25), text=element_text(family="Roboto", size=12, face="bold")) +
theme(axis.text.y = element_text(vjust = -0.25), text=element_text(family="Roboto", size=12, face="bold")) +
xlab("Date")
ggbackground(g, "~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/old_paper.jpg")
ggsave("Top_3_hotspots_7_day_growth-rate.png", width = 12, height = 8, dpi = 150, units = "in",  device="png", path="~/Desktop")
g <- ggplot(next_12_districts_data, aes(x=Date, y=Rolling.Average.7.Days, group=district)) +
scale_x_date() +
geom_line(aes(color=district), size=1.5) +
ylab("Count") +
ggtitle("New cases in other hotspots (7 day rolling average)") +
facet_wrap(~district,nrow=4, scales = "free_y") +
theme(plot.title = element_text(hjust = 0.5, vjust = -0.25, size=18), panel.grid.major = element_blank(), legend.position = "off", plot.margin=unit(c(1,1,1.5,1.2),"cm")) +
theme(axis.text.x = element_text(angle = 90, vjust = -0.25), text=element_text(family="Roboto", size=12, face="bold")) +
theme(axis.text.y = element_text(vjust = -0.25), text=element_text(family="Roboto", size=12, face="bold")) +
xlab("Date")
ggbackground(g, "~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/old_paper.jpg")
ggsave("Other_districts_7_day_rolling_average.png", width = 12, height = 8, dpi = 150, units = "in",  device="png", path="~/Desktop")
top_3_hotspots_data <- top_3_hotspots_data %>%
mutate(Day=wday(Date))
top_3_hotspots_weekly_data <- top_3_hotspots_data %>%
subset(Day==wday(Sys.Date()-1))
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
View(top_3_hotspots_data)
wday(Sys.Date()-1)
wday(Sys.Date()-1)
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
library(swirl)
View(top_3_hotspots_data)
View(top_3_hotspots_weekly_data)
swirl()
ones <- rep(1. nrow(galton))
ones <- rep(1, nrow(galton))
lm(child ~ ones+parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(tress)
head(trees)
fit <- lm(Volume~Girth + Height + Constant -1, trees)
trees2 <- elimate("Girth", trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
exit()
quit()
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/tests_as_share_of_population.R')
raw_data <- readLines("https://api.covid19india.org/raw_data11.json")
raw_data <- readLines("https://api.covid19india.org/raw_data12.json")
?try
?tryCatch
for i in (seq(3,100)) {print(i)}
for (i in seq(3,100)) {print(i)}
for (iter in seq(3,100)) {
raw_data_url <- paste0("https://api.covid19india.org/raw_data",iter,".json")
tryCatch(raw_data <- readLines(iter),
error = function(e) {break})
data2 <- as.data.frame(fromJSON(raw_data))
}
break_from_loop <<- FALSE
for (iter in seq(3,100)) {
raw_data_url <- paste0("https://api.covid19india.org/raw_data",iter,".json")
tryCatch(raw_data <- readLines(iter),
error = function(e) {break_from_loop <<- TRUE})
if(break_from_loop){
break
}
data2 <- as.data.frame(fromJSON(raw_data))
}
View(data2)
break_from_loop <<- FALSE
for (iter in seq(3,100)) {
raw_data_url <- paste0("https://api.covid19india.org/raw_data",iter,".json")
tryCatch(raw_data <- readLines(iter),
error = function(e) {break_from_loop <<- TRUE})
if(break_from_loop){
break
}
data2 <- as.data.frame(fromJSON(raw_data))
}
break_from_loop <<- FALSE
for (iter in seq(3,100)) {
raw_data_url <- paste0("https://api.covid19india.org/raw_data",iter,".json")
tryCatch(raw_data <- readLines(raw_data_url),
error = function(e) {break_from_loop <<- TRUE})
if(break_from_loop){
break
}
data2 <- as.data.frame(fromJSON(raw_data))
}
break_from_loop <<- FALSE
for (iter in seq(3,100)) {
raw_data_url <- paste0("https://api.covid19india.org/raw_data",iter,".json")
print(raw_data_url)
tryCatch(raw_data <- readLines(raw_data_url),
error = function(e) {break_from_loop <<- TRUE})
if(break_from_loop){
break
}
data2 <- as.data.frame(fromJSON(raw_data))
}
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
?t.test
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_states.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
g <- ggplot(top_3_hotspots_data, aes(x=Date, y=Rolling.Average.7.Days, group=district)) +
scale_x_date() +
geom_line(aes(color=district), size=1.5) +
ylab("Count") +
ggtitle("New cases in hotspots (7 day rolling average)") +
#facet_wrap(~district,ncol=4, scales = "free_y") +
theme(plot.title = element_text(hjust = 0.5,
vjust = -0.25,
size=18),
panel.grid.major = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
plot.margin=unit(c(1,1,1.5,1.2),"cm")) +
theme(axis.text.x = element_text(angle = 90,
vjust = -0.25),
text=element_text(family="Roboto",
size=12,
face="bold")) +
theme(axis.text.y = element_text(vjust = -0.25),
text=element_text(family="Roboto",
size=12,
face="bold"),
legend.position = "off") +
facet_wrap(~district,nrow=2, scales = "free_y") +
xlab("Date")
ggbackground(g, "~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/old_paper.jpg")
ggsave("Top_5_hotspots_7_day_rolling_average.png", width = 12, height = 8, dpi = 150, units = "in",  device="png", path="~/Desktop")
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/tamilnadu_deaths_dataset.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/tests_as_share_of_population.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_districs_2.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/most_affected_states.R')
data <- read.csv("~/Downloads/Video Games Sales/vgsales.csv")
View(data)
unique(data$region)
unique(data$platform)
with(data = data, plot(release_year, platform))
unique(data$release_year)
g <- ggplot(data=data, aes(x=release_year, y=platform))
g + geom_path()
g <- ggplot(data=data, aes(x=release_year, y=units_sold, group=region))
g + geom_path()
g <- ggplot(data=data, aes(x=release_year, y=units_sold, group=region, fill=region))
g + geom_path(color=region)
g + geom_path(aes(color=region))
g <- ggplot(data=data, aes(x=release_year, y=sum(units_sold), group=region, fill=region))
g + geom_path(aes(color=region))
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/tamilnadu_deaths_dataset.R')
vg_sales_data <- read.csv("~/Downloads/Video Games Sales/vgsales.csv")
View(vg_sales_data)
vg_yearly_successes <- vg_sales_data %>%
group_by(region, release_year) %>%
mutate(total_units_sold = sum(units_sold))
g <- ggplot(vg_yearly_successes, aes(x = release_year,
y = total_units_sold,
group = region))
g <- g + geom_path(aes(color=region))
print(g)
?summarise
vg_yearly_successes <- vg_sales_data %>%
group_by(region, release_year) %>%
summarise(total_units_sold=sum())
g <- ggplot(vg_yearly_successes, aes(x = release_year,
y = total_units_sold,
group = region))
g <- g + geom_path(aes(color=region))
print(g)
vg_yearly_successes <- vg_sales_data %>%
group_by(region, release_year) %>%
summarise(total_units_sold=sum(units_sold))
View(vg_yearly_successes)
g <- ggplot(vg_yearly_successes, aes(x = release_year,
y = total_units_sold,
group = region))
g <- g + geom_path(aes(color=region))
print(g)
View(vg_sales_data)
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/top4_states_vs_others.R')
source('~/Documents/datasciencecourse/github_root/covid-2019-india-dataset/top4_states_vs_others.R')
View(state_wise_data)
View(daily_count)
